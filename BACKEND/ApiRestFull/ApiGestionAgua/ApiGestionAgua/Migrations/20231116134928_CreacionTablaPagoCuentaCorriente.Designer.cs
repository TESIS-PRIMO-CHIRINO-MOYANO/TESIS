// <auto-generated />
using System;
using ApiGestionAgua.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiGestionAgua.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231116134928_CreacionTablaPagoCuentaCorriente")]
    partial class CreacionTablaPagoCuentaCorriente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiGestionAgua.Modelos.Barrio", b =>
                {
                    b.Property<int>("IdBarrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBarrio"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonaIdZona")
                        .HasColumnType("int");

                    b.HasKey("IdBarrio");

                    b.HasIndex("ZonaIdZona");

                    b.ToTable("Barrio");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("InsumoIdInsumo")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorIdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdCompra");

                    b.HasIndex("InsumoIdInsumo");

                    b.HasIndex("ProveedorIdProveedor");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.CuentaCorriente", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuenta"));

                    b.Property<int>("IdPago")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("PagoIdPago")
                        .HasColumnType("int");

                    b.HasKey("IdCuenta");

                    b.HasIndex("PagoIdPago");

                    b.ToTable("CuentaCorriente");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Insumo", b =>
                {
                    b.Property<int>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("IdInsumo");

                    b.ToTable("Insumo");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Linea", b =>
                {
                    b.Property<int>("IdLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLinea"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLinea");

                    b.ToTable("Linea");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.MedioPago", b =>
                {
                    b.Property<int>("IdMedioPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedioPago"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMedioPago");

                    b.ToTable("MedioPago");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Modulo", b =>
                {
                    b.Property<int>("IdModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModulo"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdModulo");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMedioPago")
                        .HasColumnType("int");

                    b.Property<int>("MedioPagoIdMedioPago")
                        .HasColumnType("int");

                    b.Property<decimal>("Pagado")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("IdPago");

                    b.HasIndex("MedioPagoIdMedioPago");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("IdLinea")
                        .HasColumnType("int");

                    b.Property<int>("LineaIdLinea")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProducto");

                    b.HasIndex("LineaIdLinea");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.RolModulo", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRol", "IdModulo");

                    b.HasIndex("IdModulo");

                    b.ToTable("RolModulo");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("RolIdRol");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Vehiculo", b =>
                {
                    b.Property<int>("IdPatente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatente"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPatente");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Zona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdZona");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Barrio", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaIdZona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Compra", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoIdInsumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiGestionAgua.Modelos.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorIdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiGestionAgua.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.CuentaCorriente", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoIdPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Pago", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.MedioPago", "MedioPago")
                        .WithMany()
                        .HasForeignKey("MedioPagoIdMedioPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedioPago");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Producto", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaIdLinea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linea");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.RolModulo", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiGestionAgua.Modelos.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ApiGestionAgua.Modelos.Usuario", b =>
                {
                    b.HasOne("ApiGestionAgua.Modelos.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolIdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
